/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package presentation;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author adria.manes.medina
 */
public class EditDistances extends javax.swing.JFrame {

    /**
     * Creates new form EditDistances
     */
    ViewController vc;
    public EditDistances(ViewController vc) {
        initComponents();
        this.vc = vc;
        actRelTable();
        
    }
    
    private void actRelTable(){
        DefaultTableModel model =  (DefaultTableModel) relationsTable.getModel();
        while(model.getRowCount()>0)model.removeRow(0);
        Vector<ArrayList<String>> relations = vc.getAllRelations();
        LinkedList<String> aux = new LinkedList();
        
        for (int i = 0; i < relations.size(); i++) {
            String s = "";
            for (int j = 0; j < relations.get(i).size(); j++) {
                if(j!=1) s += relations.get(i).get(j)+" ";
                else s += relations.get(i).get(j)+": ";
            }
            //aux.add(s);
            model.addRow(new Object[] {s});
            //System.out.println(s);
            
        }

       //Collections.sort(aux);
       
        //Configurem una ordenació i si es clica a la capçalera s'ordena automaticament.
       RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
       relationsTable.setRowSorter(sorter);
      
        //DefaultTableModel model =  (DefaultTableModel) relationsTable.getModel();
        //for (int i = 0; i < aux.size(); i++) {
        //    model.addRow(new Object[] {aux.get(i)});
        //}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        relationList = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();
        newDistance = new javax.swing.JTextField();
        editButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        relationsTable = new javax.swing.JTable();

        jLabel3.setText("Distance:");

        editButton.setText("Edit");
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });

        relationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Relations"
            }
        ));
        jScrollPane2.setViewportView(relationsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton)
                    .addComponent(newDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editButton)
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        // TODO add your handling code here:
        String aux,s1,s2;
        int pos = relationsTable.getSelectedRow();
        if (pos != -1){
            DefaultTableModel model =  (DefaultTableModel) relationsTable.getModel();
            Object valueAt = model.getValueAt(pos, 0);
            aux = (String) valueAt;
            //s1 = Avinguda0 Carrer0 
            //s2 = Avinguda0 Carrer4:  
            //      86
            s1 = aux.substring(0, aux.lastIndexOf("Avinguda")-1);
            s2 = aux.substring(aux.lastIndexOf("Avinguda"), aux.lastIndexOf(":"));
            s1 = s1.trim();
            s2 = s2.trim();

            Integer distance;
            if(!"".equals(newDistance.getText())){
                distance = Integer.parseInt(newDistance.getText());
                if (distance >= 0 && distance <= 100){
                    vc.modifyRelation(s1, s2, distance);
                    //actRelTable();
                    //Actualitzem l'element modificat directament.
                    String n = aux.substring(0,aux.lastIndexOf(":"))+": "+distance.toString();
                    relationsTable.setValueAt(n, pos, 0);
                }
                else JOptionPane.showConfirmDialog(null, "The new disctance must be between 0 and 100", "ERROR:", JOptionPane.OK_CANCEL_OPTION);
            }
            else JOptionPane.showConfirmDialog(null, "The new disctance must be between 0 and 100", "ERROR:", JOptionPane.OK_CANCEL_OPTION);
            
        }
        else JOptionPane.showConfirmDialog(null, "No row selected", "ERROR:", JOptionPane.OK_CANCEL_OPTION);
        
        
    }//GEN-LAST:event_editButtonMouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField newDistance;
    private javax.swing.JScrollPane relationList;
    private javax.swing.JTable relationsTable;
    // End of variables declaration//GEN-END:variables
}
